<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ClassProject.springboot.mapper.ProductMapper">
  <resultMap id="BaseResultMap" type="com.ClassProject.springboot.model.Product">
    <id column="id" jdbcType="INTEGER" property="pid" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="category" jdbcType="VARCHAR" property="category" />
    <result column="price" jdbcType="DOUBLE" property="price" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.ClassProject.springboot.model.Product">
    <result column="image" jdbcType="VARCHAR" property="image" />
  </resultMap>
  <sql id="Base_Column_List">
    id, title, description, category, price
  </sql>
  <sql id="Blob_Column_List">
    image
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from products
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectProductByInfo" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    *
    from products
    where description like CONCAT ('%',#{info,jdbcType=VARCHAR},'%')
    or title like CONCAT ('%',#{info,jdbcType=VARCHAR},'%')
    or category like CONCAT ('%',#{info,jdbcType=VARCHAR},'%')
  </select>



  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from products
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ClassProject.springboot.model.Product">
    insert into products (id, title, description,
      category, price, image
      )
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
      #{category,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, #{image,jdbcType=LONGVARBINARY}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ClassProject.springboot.model.Product">
    insert into products
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="image != null">
        image,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="image != null">
        #{image,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ClassProject.springboot.model.Product">
    update products
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ClassProject.springboot.model.Product">
    update products
    set title = #{title,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      image = #{image,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ClassProject.springboot.model.Product">
    update products
    set title = #{title,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
 <!-- <resultMap id="BaseResultMap" type="com.ClassProject.springboot.model.Product">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="category" jdbcType="VARCHAR" property="category" />
    <result column="image" jdbcType="VARCHAR" property="image" />
  </resultMap>-->
<!--  <insert id="insert" parameterType="com.ClassProject.springboot.model.Product">
    insert into products (id, title, description, 
      price, category, image
      )
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{price,jdbcType=DOUBLE}, #{category,jdbcType=VARCHAR}, #{image,jdbcType=VARCHAR}
      )
  </insert>-->
  <!--<insert id="insertSelective" parameterType="com.ClassProject.springboot.model.Product">
    insert into products
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="image != null">
        image,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>-->
</mapper>